class Solution:
    def reverseBits(self, n):
        """
        :type n: int
        :rtype: int
        """
        result = 0
        for i in range(32):
            bit = (n >> i) & 1      # Extract the i-th bit from n
            result = (result << 1) | bit  # Shift result left and add current bit
        return result

Explanation:
Loop 32 times (since it's a 32-bit number).
Each time:
Get the i-th bit of n: (n >> i) & 1
Append it to the result: result = (result << 1) | bit


Iteration 0:
i = 0
(n >> 0) & 1 = 1 → rightmost bit is 1
result = (0 << 1) | 1 = 1


Iteration 1:
i = 1
(n >> 1) & 1 = 0
result = (1 << 1) | 0 = 2 → 0b10


Iteration 2:
i = 2
(n >> 2) & 1 = 1
result = (2 << 1) | 1 = 5 → 0b101

Iteration 3:
i = 3
(n >> 3) & 1 = 1
result = (5 << 1) | 1 = 11 → 0b1011


rest is Zero so append its 101100000000000000000000000000000000000


